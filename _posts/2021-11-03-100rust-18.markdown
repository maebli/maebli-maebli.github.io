---
layout: post
title:  "Rust challenge 18/100 - Porting LoRaWAN project part 3"
date:   2021-11-05 21:00:00 +0100
categories: rust
---

#  Table of content
<!-- MarkdownTOC autolink="true" -->

- [What is this :grey_question:](#what-is-this-grey_question)
- [18th Challenge](#18th-challenge)
	- [challenge](#challenge)
	- [Solution :white_check_mark:](#solution-white_check_mark)

<!-- /MarkdownTOC -->

## What is this :grey_question: 

The rules of the game are explained [in my original post](https://maebli.github.io/rust/2021/10/18/100rust.html). 

## 18th Challenge
### challenge

Today's challenge is continuation of a [previous challenge](https://maebli.github.io/rust/2021/11/03/100rust-17.html).
The task is to extend the existing project with tests


### Solution :white_check_mark:

The new solution looks like this:


	{% highlight rust %}

	impl Modulation{
	    fn get_symbol_duration(&self) -> f64{
	        ((1<<self.spreading_factor) * 1000_000 / self.bandwidth) as f64
	    }
	    fn get_preamble_duration(&self,preamble_length:u64) -> f64{
	        (100.0 * preamble_length as f64 + 425.0) / 100.0 * self.get_symbol_duration()
	    }
	}

	#[test]
	fn test_get_payload_symbol_count(){
	    let f = FrameMetaInformation{
	        payload_length: 13,
	        preamble_length: 0,
	        is_header_enabled: true,
	        is_low_data_rate_optimization_enabled: false,
	        modulation: Modulation {
	            spreading_factor: 12,
	            bandwidth: 0
	        },
	        coding_rate: CodingRates::CodingRate45
	    };

	    assert_eq!(23,f.get_payload_symbol_count())
	}

	#[cfg(test)]
	mod tests {

	    use super::*;

	    #[test]
	    fn test_get_preamble_duration() {
	        let m = Modulation {
	            spreading_factor: 12,
	            bandwidth: 125
	        };
	        assert_eq!(401408_000.0, m.get_preamble_duration(8));
	    }

	    #[test]
	    fn test_get_symbol_duration() {
	        let mut m = Modulation {
	            spreading_factor: 12,
	            bandwidth: 125
	        };
	        assert_eq!(32768_000.0, m.get_symbol_duration());
	        m.spreading_factor = 9;
	        assert_eq!(4096_000.0, m.get_symbol_duration());
	        m.bandwidth = 500;
	        assert_eq!(1024_000.0, m.get_symbol_duration());
	    }

	    #[test]
	    fn test_airtime_calculation() {
	        let f = FrameMetaInformation {
	            payload_length: 13,
	            preamble_length: 8,
	            is_header_enabled: true,
	            is_low_data_rate_optimization_enabled: false,
	            modulation: Modulation {
	                spreading_factor: 12,
	                bandwidth: 125
	            },
	            coding_rate: CodingRates::CodingRate45,
	        };

	        assert_eq!(1_155_072_000, f.get_airtime() as u64);
	    }
	}
	{% endhighlight %}

To get a good feel for it see / clone [github](https://github.com/maebli/100rustsnippets/tree/master/lorawan-project-structure-2). You can see the [tests in action on rust playground](https://play.rust-lang.org/?version=stable&edition=2018&gist=fd2be0ca105830b47046f7f67fa958a0)
